{"version":3,"sources":["components/Form.jsx","components/Profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","name","location","image","Form","props","useState","state","setState","handleInput","ev","preventDefault","target","value","onSubmit","console","log","addProfile","type","onChange","src","Profile","profiles","map","profile","width","JSON","stringify","App","setProfiles","className","newProfiles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAEMA,EAAc,CAChBC,KAAK,GACLC,SAAS,GACTC,MAAM,IAuDKC,EApDH,SAACC,GACT,MAAsBC,mBAASN,GAA/B,mBAAMO,EAAN,KAAYC,EAAZ,KAYMC,EAAY,SAACC,GACfA,EAAGC,iBACH,MAAmBD,EAAGE,OAAfX,EAAP,EAAOA,KAAKY,EAAZ,EAAYA,MACZL,EAAS,2BAAID,GAAL,kBAAYN,EAAMY,MAE9B,OACI,gCACI,uBAAMC,SAlBG,SAACJ,GACd,IAAOT,EAAsBM,EAAtBN,KAAMC,EAAgBK,EAAhBL,SAASC,EAAOI,EAAPJ,MACtBO,EAAGC,iBACCV,GAAOC,GAAWC,IAGtBY,QAAQC,IAAIT,GACZF,EAAMY,WAAWV,GACjBC,EAASR,KAUL,UACI,kCACI,sCACJ,uBAAOkB,KAAK,OAAOjB,KAAK,OAAMY,MAAON,EAAMN,KAAMkB,SAAUV,OAE3D,kCACI,0CACJ,uBAAOS,KAAK,OAAOjB,KAAK,WAAUY,MAAON,EAAML,SAAUiB,SAAUV,OAEnE,kCACI,uCACJ,uBAAOS,KAAK,OAAOjB,KAAK,QAAOY,MAAON,EAAMJ,MAAOgB,SAAUV,OAE7D,8BACA,wBAAQS,KAAK,SAAb,8BAIJ,gCAGI,uCACe,KAAdX,EAAMJ,MACP,qBAAKiB,IAAKb,EAAMJ,QACd,UClCHkB,EAhBD,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACZ,OACI,mCACKA,EAASC,KAAI,SAAAC,GACV,OACA,gCACI,4BAAIA,EAAQvB,OACZ,4BAAIuB,EAAQtB,WACZ,qBAAKkB,IAAKI,EAAQrB,MAAOsB,MAAM,UAHzBC,KAAKC,UAAUH,UCqB1BI,MApBf,WAEE,MAAgCtB,mBAAS,IAAzC,mBAAOgB,EAAP,KAAiBO,EAAjB,KAMA,OACC,sBAAKC,UAAU,MAAf,UACG,qDACA,cAAC,EAAD,CAAMb,WARS,SAACO,GAClB,IAAMO,EAAW,sBAAQT,GAAR,CAAkBE,IACnCK,EAAYE,GACZhB,QAAQC,IAAIM,MAMV,cAAC,EAAD,CAASA,SAAUA,QCRVU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8530267f.chunk.js","sourcesContent":["import React ,{useState} from \"react\";\r\n\r\nconst INITIAL_STATE={\r\n    name:'',\r\n    location:'',\r\n    image:''\r\n}\r\n\r\nconst Form= (props)=>{\r\n    const[state,setState]=useState(INITIAL_STATE);\r\n    const submitForm=(ev)=>{\r\n        const {name ,location,image}=state\r\n        ev.preventDefault();\r\n        if(!name||!location||!image){\r\n            return;\r\n        }\r\n        console.log(state);\r\n        props.addProfile(state);\r\n        setState(INITIAL_STATE);\r\n        \r\n    }\r\n    const handleInput=(ev)=>{\r\n        ev.preventDefault();\r\n        const {name,value}=ev.target\r\n        setState({...state,[name]:value})\r\n    }\r\n    return(\r\n        <div>\r\n            <form onSubmit={submitForm}>\r\n                <label>\r\n                    <p>Name:</p>\r\n                <input type=\"text\" name=\"name\"value={state.name} onChange={handleInput}/>\r\n                </label>\r\n                <label>\r\n                    <p>location:</p>\r\n                <input type=\"text\" name=\"location\"value={state.location} onChange={handleInput}/>\r\n                </label>\r\n                <label>\r\n                    <p>Image:</p>\r\n                <input type=\"text\" name=\"image\"value={state.image} onChange={handleInput}/>\r\n                </label>\r\n                <div>\r\n                <button type=\"submit\">Enviar info</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div>\r\n                {/* <p>Name: {state.name !==''?state.name:''}</p>\r\n                <p>Location:{state.location !==''?state.location:''}</p> */}\r\n                <p>Image:</p>\r\n                {state.image!==''?(\r\n                <img src={state.image}/>\r\n                ):''}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Profile=({profiles})=>{\r\n    return(\r\n        <>\r\n            {profiles.map(profile=>{\r\n                return(\r\n                <div key={JSON.stringify(profile)}>\r\n                    <p>{profile.name}</p>\r\n                    <p>{profile.location}</p>\r\n                    <img src={profile.image} width=\"200\"/>\r\n                </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {useState}  from 'react';\nimport './App.css';\nimport Form from\"./components/Form\" \nimport Profile from\"./components/Profile\" \n// function handleClick(e){\n//   e.preventDefault();\n//   console.log(\"has echo click\")\n// }\nfunction App(){\n  // const [count,setCount]=useState(0)\n  const [profiles, setProfiles] = useState([]);\n  const addProfile = (profile) => {\n    const newProfiles = [ ...profiles, profile ];\n    setProfiles(newProfiles);\n    console.log(profiles)\n  };\n  return(\n   <div className=\"App\">\n      <h1>Listado de perfiles</h1>\n      <Form addProfile={addProfile} />\n      <Profile profiles={profiles}/>\n    {/* <p>has clickado {count} veces</p>\n    <button onClick={()=>setCount(count-1)}>click</button>\n    <button onClick={()=>setCount(count+1)}>click</button> */}\n\n  </div>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}